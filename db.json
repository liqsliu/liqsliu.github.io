{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"5963ab0b5bb5f7f54023cf0bc9a1463a7c1993b9","modified":1526783031438},{"_id":"source/README.md","hash":"c6e166c2fa148ce2d20527d2803dfd07c4b928a7","modified":1526783031440},{"_id":"themes/landscape/.gitignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1526783031449},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1526783031452},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1526783031454},{"_id":"themes/landscape/README.md","hash":"67fedfb66304f103c412f6be110bf3c40c75d4ac","modified":1526783031456},{"_id":"themes/landscape/_config.yml","hash":"ce9d2939245209b8f5c5bbbdadc917d86057d032","modified":1526783031458},{"_id":"themes/landscape/package.json","hash":"6e567a9654e61eb3f548c75edef380c2e135c433","modified":1526783031550},{"_id":"source/_posts/2018-05-20-233.md","hash":"4df5b9cd991dfbac273682f3a977d4abbcfa433a","modified":1526784551789},{"_id":"source/_posts/hello-world.md","hash":"029f91fccbe8f87c0f3ea10c4042300d2fa7edc0","modified":1526783031442},{"_id":"source/_posts/test-1.md","hash":"dbd527a2b7a513bc14563ee7260a5163bf6ef743","modified":1526783031444},{"_id":"source/_posts/test.md","hash":"e163591ae550eb88da2b70369bee6b9c006f9b9d","modified":1526783031446},{"_id":"themes/landscape/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1526783031460},{"_id":"themes/landscape/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1526783031463},{"_id":"themes/landscape/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1526783031464},{"_id":"themes/landscape/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1526783031466},{"_id":"themes/landscape/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1526783031468},{"_id":"themes/landscape/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1526783031471},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1526783031473},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1526783031476},{"_id":"themes/landscape/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1526783031478},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1526783031479},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1526783031482},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1526783031484},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1526783031535},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1526783031537},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1526783031539},{"_id":"themes/landscape/layout/layout.ejs","hash":"5d86bc48b0f1bdce9a2bb548c2f8e7a4f50d499a","modified":1526783031541},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1526783031543},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1526783031545},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1526783031548},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1526783031552},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"5e3b70c028d518b8f765e29a5e2020e7ba6ed589","modified":1526783031487},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1526783031489},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"017c412bd3d60d22e493f02918e436a32d96bb84","modified":1526783031491},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1526783031493},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"6faefe07f3d64e21c7743276e0f55ee1544f9d86","modified":1526783031496},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"ace3000bd3e01d03041d5be24f7640b6c003a5b5","modified":1526783031498},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1526783031500},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"a36cec48782782bac92622f369c750e5c7396510","modified":1526783031503},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"cf755454675d13a0813a922b575c06b6b74ab9fd","modified":1526783031505},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1526783031507},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1526783031522},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1526783031525},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1526783031527},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1526783031529},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1526783031531},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1526783031533},{"_id":"themes/landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1526783031555},{"_id":"themes/landscape/source/css/_variables.styl","hash":"57bb02270eef16b4823a64ba663ccf2f247f34e5","modified":1526783031588},{"_id":"themes/landscape/source/css/style.styl","hash":"4a3e64ee8dad5834860c30b4176882eff628ca6b","modified":1526783031625},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1526783031628},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1526783031632},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1526783031634},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1526783031637},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1526783031639},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1526783031641},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1526783031659},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1526783031663},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1526783031666},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1526783031669},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1526783031509},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1526783031511},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1526783031514},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1526783031516},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1526783031518},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1526783031520},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1526783031558},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1526783031561},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1526783031563},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1526783031566},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1526783031568},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1526783031571},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1526783031574},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1526783031576},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1526783031578},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1526783031580},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1526783031583},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1526783031586},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1526783031593},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1526783031596},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1526783031615},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1526783031644},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1526783031647},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1526783031650},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1526783031652},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1526783031654},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1526783031656},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1526783031611},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1526783031605},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1526783031623},{"_id":"public/2018/05/20/233/index.html","hash":"50ace39da51598bb30edfc5be21d420598f295ae","modified":1526784565326},{"_id":"public/2018/05/20/hello-world/index.html","hash":"94d6c2dbe9bfd27d7a9b2bf3410e1faeb3629a1e","modified":1526784565317},{"_id":"public/2018/05/19/test-1/index.html","hash":"ce49ac528ef9964e063e0887ba48c09f6769934b","modified":1526784565323},{"_id":"public/2018/05/19/test/index.html","hash":"a5d3e1052b6cba95b2bd22b14eb815061857ebc2","modified":1526784565325},{"_id":"public/archives/index.html","hash":"5f4f926fa5bf7046219aef87b1223ee359065c5f","modified":1526784565325},{"_id":"public/archives/2018/index.html","hash":"63f2924a6dff981a8e361c4dbf6a14366bcbde75","modified":1526784565325},{"_id":"public/archives/2018/05/index.html","hash":"0c0327ff19560a7e82c51941bcabf6546dcaa256","modified":1526784565326},{"_id":"public/index.html","hash":"0ade50f3bc587c7198b4120bd4dc7bb788e9d7d7","modified":1526784565326},{"_id":"public/CNAME","hash":"5963ab0b5bb5f7f54023cf0bc9a1463a7c1993b9","modified":1526783874950},{"_id":"public/README.md","hash":"c6e166c2fa148ce2d20527d2803dfd07c4b928a7","modified":1526783874950},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1526783874950},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1526783874950},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1526783874951},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1526783874951},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1526783874952},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1526783874952},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1526783874952},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1526783874952},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1526783874953},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1526783874953},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1526783876665},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1526783876676},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1526783876677},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1526783876677},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1526783876677},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1526783876677},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1526783876678},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1526783876678},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1526783876679},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1526783876727},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1526783876728},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1526783876736},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1526783876773},{"_id":"public/tags/ת��/index.html","hash":"01f9c8d0aec8e004c33e4d36bc3752b4135a680c","modified":1526784368859},{"_id":"public/tags/转载/index.html","hash":"c4d567cd90924f8604f795ab4d2e0c06db69cb54","modified":1526784565327}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-05-20T02:23:51.440Z","updated":"2018-05-20T02:23:51.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhe7p4r000006sltv6fo70pt","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"test","date":"2018-05-19T14:58:25.000Z","_content":"","source":"_posts/test-1.md","raw":"---\ntitle: test\ndate: 2018-05-19 22:58:25\ntags:\n---\n","slug":"test-1","published":1,"updated":"2018-05-20T02:23:51.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhe7p4ri00016slt34g1n8v7","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"233","date":"2018-05-20T02:31:26.000Z","_content":"from: http://www.ruanyifeng.com/blog/2014/06/git_remote.html\n---\n\n一、git clone\n远程操作的第一步，通常是从远程主机克隆一个版本库，这时就要用到git clone命令。\n\n\n$ git clone <版本库的网址>\n比如，克隆jQuery的版本库。\n\n\n$ git clone https://github.com/jquery/jquery.git\n该命令会在本地主机生成一个目录，与远程主机的版本库同名。如果要指定不同的目录名，可以将目录名作为git clone命令的第二个参数。\n\n\n$ git clone <版本库的网址> <本地目录名>\ngit clone支持多种协议，除了HTTP(s)以外，还支持SSH、Git、本地文件协议等，下面是一些例子。\n\n\n$ git clone http[s]://example.com/path/to/repo.git/\n$ git clone ssh://example.com/path/to/repo.git/\n$ git clone git://example.com/path/to/repo.git/\n$ git clone /opt/git/project.git \n$ git clone file:///opt/git/project.git\n$ git clone ftp[s]://example.com/path/to/repo.git/\n$ git clone rsync://example.com/path/to/repo.git/\nSSH协议还有另一种写法。\n\n\n$ git clone [user@]example.com:path/to/repo.git/\n通常来说，Git协议下载速度最快，SSH协议用于需要用户认证的场合。各种协议优劣的详细讨论请参考官方文档。\n\n二、git remote\n为了便于管理，Git要求每个远程主机都必须指定一个主机名。git remote命令就用于管理主机名。\n\n不带选项的时候，git remote命令列出所有远程主机。\n\n\n$ git remote\norigin\n使用-v选项，可以参看远程主机的网址。\n\n\n$ git remote -v\norigin  git@github.com:jquery/jquery.git (fetch)\norigin  git@github.com:jquery/jquery.git (push)\n上面命令表示，当前只有一台远程主机，叫做origin，以及它的网址。\n\n克隆版本库的时候，所使用的远程主机自动被Git命名为origin。如果想用其他的主机名，需要用git clone命令的-o选项指定。\n\n\n$ git clone -o jQuery https://github.com/jquery/jquery.git\n$ git remote\njQuery\n上面命令表示，克隆的时候，指定远程主机叫做jQuery。\n\ngit remote show命令加上主机名，可以查看该主机的详细信息。\n\n\n$ git remote show <主机名>\ngit remote add命令用于添加远程主机。\n\n\n$ git remote add <主机名> <网址>\ngit remote rm命令用于删除远程主机。\n\n\n$ git remote rm <主机名>\ngit remote rename命令用于远程主机的改名。\n\n\n$ git remote rename <原主机名> <新主机名>\n三、git fetch\n一旦远程主机的版本库有了更新（Git术语叫做commit），需要将这些更新取回本地，这时就要用到git fetch命令。\n\n\n$ git fetch <远程主机名>\n上面命令将某个远程主机的更新，全部取回本地。\n\ngit fetch命令通常用来查看其他人的进程，因为它取回的代码对你本地的开发代码没有影响。\n\n默认情况下，git fetch取回所有分支（branch）的更新。如果只想取回特定分支的更新，可以指定分支名。\n\n\n$ git fetch <远程主机名> <分支名>\n比如，取回origin主机的master分支。\n\n\n$ git fetch origin master\n所取回的更新，在本地主机上要用\"远程主机名/分支名\"的形式读取。比如origin主机的master，就要用origin/master读取。\n\ngit branch命令的-r选项，可以用来查看远程分支，-a选项查看所有分支。\n\n\n$ git branch -r\norigin/master\n\n$ git branch -a\n* master\n  remotes/origin/master\n上面命令表示，本地主机的当前分支是master，远程分支是origin/master。\n\n取回远程主机的更新以后，可以在它的基础上，使用git checkout命令创建一个新的分支。\n\n\n$ git checkout -b newBrach origin/master\n上面命令表示，在origin/master的基础上，创建一个新分支。\n\n此外，也可以使用git merge命令或者git rebase命令，在本地分支上合并远程分支。\n\n\n$ git merge origin/master\n# 或者\n$ git rebase origin/master\n上面命令表示在当前分支上，合并origin/master。\n\n四、git pull\ngit pull命令的作用是，取回远程主机某个分支的更新，再与本地的指定分支合并。它的完整格式稍稍有点复杂。\n\n\n$ git pull <远程主机名> <远程分支名>:<本地分支名>\n比如，取回origin主机的next分支，与本地的master分支合并，需要写成下面这样。\n\n\n$ git pull origin next:master\n如果远程分支是与当前分支合并，则冒号后面的部分可以省略。\n\n\n$ git pull origin next\n上面命令表示，取回origin/next分支，再与当前分支合并。实质上，这等同于先做git fetch，再做git merge。\n\n\n$ git fetch origin\n$ git merge origin/next\n在某些场合，Git会自动在本地分支与远程分支之间，建立一种追踪关系（tracking）。比如，在git clone的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，也就是说，本地的master分支自动\"追踪\"origin/master分支。\n\nGit也允许手动建立追踪关系。\n\n\ngit branch --set-upstream master origin/next\n上面命令指定master分支追踪origin/next分支。\n\n如果当前分支与远程分支存在追踪关系，git pull就可以省略远程分支名。\n\n\n$ git pull origin\n上面命令表示，本地的当前分支自动与对应的origin主机\"追踪分支\"（remote-tracking branch）进行合并。\n\n如果当前分支只有一个追踪分支，连远程主机名都可以省略。\n\n\n$ git pull\n上面命令表示，当前分支自动与唯一一个追踪分支进行合并。\n\n如果合并需要采用rebase模式，可以使用--rebase选项。\n\n\n$ git pull --rebase <远程主机名> <远程分支名>:<本地分支名>\n如果远程主机删除了某个分支，默认情况下，git pull 不会在拉取远程分支的时候，删除对应的本地分支。这是为了防止，由于其他人操作了远程主机，导致git pull不知不觉删除了本地分支。\n\n但是，你可以改变这个行为，加上参数 -p 就会在本地删除远程已经删除的分支。\n\n\n$ git pull -p\n# 等同于下面的命令\n$ git fetch --prune origin \n$ git fetch -p\n五、git push\ngit push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相仿。\n\n\n$ git push <远程主机名> <本地分支名>:<远程分支名>\n注意，分支推送顺序的写法是<来源地>:<目的地>，所以git pull是<远程分支>:<本地分支>，而git push是<本地分支>:<远程分支>。\n\n如果省略远程分支名，则表示将本地分支推送与之存在\"追踪关系\"的远程分支（通常两者同名），如果该远程分支不存在，则会被新建。\n\n\n$ git push origin master\n上面命令表示，将本地的master分支推送到origin主机的master分支。如果后者不存在，则会被新建。\n\n如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。\n\n\n$ git push origin :master\n# 等同于\n$ git push origin --delete master\n上面命令表示删除origin主机的master分支。\n\n如果当前分支与远程分支之间存在追踪关系，则本地分支和远程分支都可以省略。\n\n\n$ git push origin\n上面命令表示，将当前分支推送到origin主机的对应分支。\n\n如果当前分支只有一个追踪分支，那么主机名都可以省略。\n\n\n$ git push\n如果当前分支与多个主机存在追踪关系，则可以使用-u选项指定一个默认主机，这样后面就可以不加任何参数使用git push。\n\n\n$ git push -u origin master\n上面命令将本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了。\n\n不带任何参数的git push，默认只推送当前分支，这叫做simple方式。此外，还有一种matching方式，会推送所有有对应的远程分支的本地分支。Git 2.0版本之前，默认采用matching方法，现在改为默认采用simple方式。如果要修改这个设置，可以采用git config命令。\n\n\n$ git config --global push.default matching\n# 或者\n$ git config --global push.default simple\n还有一种情况，就是不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用--all选项。\n\n\n$ git push --all origin\n上面命令表示，将所有本地分支都推送到origin主机。\n\n如果远程主机的版本比本地版本更新，推送时Git会报错，要求先在本地做git pull合并差异，然后再推送到远程主机。这时，如果你一定要推送，可以使用--force选项。\n\n\n$ git push --force origin \n上面命令使用--force选项，结果导致远程主机上更新的版本被覆盖。除非你很确定要这样做，否则应该尽量避免使用--force选项。\n\n最后，git push不会推送标签（tag），除非使用--tags选项。\n\n\n$ git push origin --tags\n（完）\n\n文档信息\n版权声明：自由转载-非商用-非衍生-保持署名（创意共享3.0许可证）\n发表日期： 2014年6月12日\n更多内容： 档案 ? 开发者手册\n文集：《前方的路》，《未来世界的幸存者》\n","source":"_posts/2018-05-20-233.md","raw":"---\ntitle: 233\ndate: 2018-05-20 10:31:26\ntags: 转载\n---\nfrom: http://www.ruanyifeng.com/blog/2014/06/git_remote.html\n---\n\n一、git clone\n远程操作的第一步，通常是从远程主机克隆一个版本库，这时就要用到git clone命令。\n\n\n$ git clone <版本库的网址>\n比如，克隆jQuery的版本库。\n\n\n$ git clone https://github.com/jquery/jquery.git\n该命令会在本地主机生成一个目录，与远程主机的版本库同名。如果要指定不同的目录名，可以将目录名作为git clone命令的第二个参数。\n\n\n$ git clone <版本库的网址> <本地目录名>\ngit clone支持多种协议，除了HTTP(s)以外，还支持SSH、Git、本地文件协议等，下面是一些例子。\n\n\n$ git clone http[s]://example.com/path/to/repo.git/\n$ git clone ssh://example.com/path/to/repo.git/\n$ git clone git://example.com/path/to/repo.git/\n$ git clone /opt/git/project.git \n$ git clone file:///opt/git/project.git\n$ git clone ftp[s]://example.com/path/to/repo.git/\n$ git clone rsync://example.com/path/to/repo.git/\nSSH协议还有另一种写法。\n\n\n$ git clone [user@]example.com:path/to/repo.git/\n通常来说，Git协议下载速度最快，SSH协议用于需要用户认证的场合。各种协议优劣的详细讨论请参考官方文档。\n\n二、git remote\n为了便于管理，Git要求每个远程主机都必须指定一个主机名。git remote命令就用于管理主机名。\n\n不带选项的时候，git remote命令列出所有远程主机。\n\n\n$ git remote\norigin\n使用-v选项，可以参看远程主机的网址。\n\n\n$ git remote -v\norigin  git@github.com:jquery/jquery.git (fetch)\norigin  git@github.com:jquery/jquery.git (push)\n上面命令表示，当前只有一台远程主机，叫做origin，以及它的网址。\n\n克隆版本库的时候，所使用的远程主机自动被Git命名为origin。如果想用其他的主机名，需要用git clone命令的-o选项指定。\n\n\n$ git clone -o jQuery https://github.com/jquery/jquery.git\n$ git remote\njQuery\n上面命令表示，克隆的时候，指定远程主机叫做jQuery。\n\ngit remote show命令加上主机名，可以查看该主机的详细信息。\n\n\n$ git remote show <主机名>\ngit remote add命令用于添加远程主机。\n\n\n$ git remote add <主机名> <网址>\ngit remote rm命令用于删除远程主机。\n\n\n$ git remote rm <主机名>\ngit remote rename命令用于远程主机的改名。\n\n\n$ git remote rename <原主机名> <新主机名>\n三、git fetch\n一旦远程主机的版本库有了更新（Git术语叫做commit），需要将这些更新取回本地，这时就要用到git fetch命令。\n\n\n$ git fetch <远程主机名>\n上面命令将某个远程主机的更新，全部取回本地。\n\ngit fetch命令通常用来查看其他人的进程，因为它取回的代码对你本地的开发代码没有影响。\n\n默认情况下，git fetch取回所有分支（branch）的更新。如果只想取回特定分支的更新，可以指定分支名。\n\n\n$ git fetch <远程主机名> <分支名>\n比如，取回origin主机的master分支。\n\n\n$ git fetch origin master\n所取回的更新，在本地主机上要用\"远程主机名/分支名\"的形式读取。比如origin主机的master，就要用origin/master读取。\n\ngit branch命令的-r选项，可以用来查看远程分支，-a选项查看所有分支。\n\n\n$ git branch -r\norigin/master\n\n$ git branch -a\n* master\n  remotes/origin/master\n上面命令表示，本地主机的当前分支是master，远程分支是origin/master。\n\n取回远程主机的更新以后，可以在它的基础上，使用git checkout命令创建一个新的分支。\n\n\n$ git checkout -b newBrach origin/master\n上面命令表示，在origin/master的基础上，创建一个新分支。\n\n此外，也可以使用git merge命令或者git rebase命令，在本地分支上合并远程分支。\n\n\n$ git merge origin/master\n# 或者\n$ git rebase origin/master\n上面命令表示在当前分支上，合并origin/master。\n\n四、git pull\ngit pull命令的作用是，取回远程主机某个分支的更新，再与本地的指定分支合并。它的完整格式稍稍有点复杂。\n\n\n$ git pull <远程主机名> <远程分支名>:<本地分支名>\n比如，取回origin主机的next分支，与本地的master分支合并，需要写成下面这样。\n\n\n$ git pull origin next:master\n如果远程分支是与当前分支合并，则冒号后面的部分可以省略。\n\n\n$ git pull origin next\n上面命令表示，取回origin/next分支，再与当前分支合并。实质上，这等同于先做git fetch，再做git merge。\n\n\n$ git fetch origin\n$ git merge origin/next\n在某些场合，Git会自动在本地分支与远程分支之间，建立一种追踪关系（tracking）。比如，在git clone的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，也就是说，本地的master分支自动\"追踪\"origin/master分支。\n\nGit也允许手动建立追踪关系。\n\n\ngit branch --set-upstream master origin/next\n上面命令指定master分支追踪origin/next分支。\n\n如果当前分支与远程分支存在追踪关系，git pull就可以省略远程分支名。\n\n\n$ git pull origin\n上面命令表示，本地的当前分支自动与对应的origin主机\"追踪分支\"（remote-tracking branch）进行合并。\n\n如果当前分支只有一个追踪分支，连远程主机名都可以省略。\n\n\n$ git pull\n上面命令表示，当前分支自动与唯一一个追踪分支进行合并。\n\n如果合并需要采用rebase模式，可以使用--rebase选项。\n\n\n$ git pull --rebase <远程主机名> <远程分支名>:<本地分支名>\n如果远程主机删除了某个分支，默认情况下，git pull 不会在拉取远程分支的时候，删除对应的本地分支。这是为了防止，由于其他人操作了远程主机，导致git pull不知不觉删除了本地分支。\n\n但是，你可以改变这个行为，加上参数 -p 就会在本地删除远程已经删除的分支。\n\n\n$ git pull -p\n# 等同于下面的命令\n$ git fetch --prune origin \n$ git fetch -p\n五、git push\ngit push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相仿。\n\n\n$ git push <远程主机名> <本地分支名>:<远程分支名>\n注意，分支推送顺序的写法是<来源地>:<目的地>，所以git pull是<远程分支>:<本地分支>，而git push是<本地分支>:<远程分支>。\n\n如果省略远程分支名，则表示将本地分支推送与之存在\"追踪关系\"的远程分支（通常两者同名），如果该远程分支不存在，则会被新建。\n\n\n$ git push origin master\n上面命令表示，将本地的master分支推送到origin主机的master分支。如果后者不存在，则会被新建。\n\n如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。\n\n\n$ git push origin :master\n# 等同于\n$ git push origin --delete master\n上面命令表示删除origin主机的master分支。\n\n如果当前分支与远程分支之间存在追踪关系，则本地分支和远程分支都可以省略。\n\n\n$ git push origin\n上面命令表示，将当前分支推送到origin主机的对应分支。\n\n如果当前分支只有一个追踪分支，那么主机名都可以省略。\n\n\n$ git push\n如果当前分支与多个主机存在追踪关系，则可以使用-u选项指定一个默认主机，这样后面就可以不加任何参数使用git push。\n\n\n$ git push -u origin master\n上面命令将本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了。\n\n不带任何参数的git push，默认只推送当前分支，这叫做simple方式。此外，还有一种matching方式，会推送所有有对应的远程分支的本地分支。Git 2.0版本之前，默认采用matching方法，现在改为默认采用simple方式。如果要修改这个设置，可以采用git config命令。\n\n\n$ git config --global push.default matching\n# 或者\n$ git config --global push.default simple\n还有一种情况，就是不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用--all选项。\n\n\n$ git push --all origin\n上面命令表示，将所有本地分支都推送到origin主机。\n\n如果远程主机的版本比本地版本更新，推送时Git会报错，要求先在本地做git pull合并差异，然后再推送到远程主机。这时，如果你一定要推送，可以使用--force选项。\n\n\n$ git push --force origin \n上面命令使用--force选项，结果导致远程主机上更新的版本被覆盖。除非你很确定要这样做，否则应该尽量避免使用--force选项。\n\n最后，git push不会推送标签（tag），除非使用--tags选项。\n\n\n$ git push origin --tags\n（完）\n\n文档信息\n版权声明：自由转载-非商用-非衍生-保持署名（创意共享3.0许可证）\n发表日期： 2014年6月12日\n更多内容： 档案 ? 开发者手册\n文集：《前方的路》，《未来世界的幸存者》\n","slug":"233","published":1,"updated":"2018-05-20T02:49:11.789Z","_id":"cjhe7p4rs00026slt8x7qsl18","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"from-http-www-ruanyifeng-com-blog-2014-06-git-remote-html\"><a href=\"#from-http-www-ruanyifeng-com-blog-2014-06-git-remote-html\" class=\"headerlink\" title=\"from: http://www.ruanyifeng.com/blog/2014/06/git_remote.html\"></a>from: <a href=\"http://www.ruanyifeng.com/blog/2014/06/git_remote.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2014/06/git_remote.html</a></h2><p>一、git clone<br>远程操作的第一步，通常是从远程主机克隆一个版本库，这时就要用到git clone命令。</p>\n<p>$ git clone &lt;版本库的网址&gt;<br>比如，克隆jQuery的版本库。</p>\n<p>$ git clone <a href=\"https://github.com/jquery/jquery.git\" target=\"_blank\" rel=\"noopener\">https://github.com/jquery/jquery.git</a><br>该命令会在本地主机生成一个目录，与远程主机的版本库同名。如果要指定不同的目录名，可以将目录名作为git clone命令的第二个参数。</p>\n<p>$ git clone &lt;版本库的网址&gt; &lt;本地目录名&gt;<br>git clone支持多种协议，除了HTTP(s)以外，还支持SSH、Git、本地文件协议等，下面是一些例子。</p>\n<p>$ git clone http[s]://example.com/path/to/repo.git/<br>$ git clone ssh://example.com/path/to/repo.git/<br>$ git clone git://example.com/path/to/repo.git/<br>$ git clone /opt/git/project.git<br>$ git clone file:///opt/git/project.git<br>$ git clone ftp[s]://example.com/path/to/repo.git/<br>$ git clone rsync://example.com/path/to/repo.git/<br>SSH协议还有另一种写法。</p>\n<p>$ git clone [user@]example.com:path/to/repo.git/<br>通常来说，Git协议下载速度最快，SSH协议用于需要用户认证的场合。各种协议优劣的详细讨论请参考官方文档。</p>\n<p>二、git remote<br>为了便于管理，Git要求每个远程主机都必须指定一个主机名。git remote命令就用于管理主机名。</p>\n<p>不带选项的时候，git remote命令列出所有远程主机。</p>\n<p>$ git remote<br>origin<br>使用-v选项，可以参看远程主机的网址。</p>\n<p>$ git remote -v<br>origin  <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:jquery/jquery.git (fetch)<br>origin  <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:jquery/jquery.git (push)<br>上面命令表示，当前只有一台远程主机，叫做origin，以及它的网址。</p>\n<p>克隆版本库的时候，所使用的远程主机自动被Git命名为origin。如果想用其他的主机名，需要用git clone命令的-o选项指定。</p>\n<p>$ git clone -o jQuery <a href=\"https://github.com/jquery/jquery.git\" target=\"_blank\" rel=\"noopener\">https://github.com/jquery/jquery.git</a><br>$ git remote<br>jQuery<br>上面命令表示，克隆的时候，指定远程主机叫做jQuery。</p>\n<p>git remote show命令加上主机名，可以查看该主机的详细信息。</p>\n<p>$ git remote show &lt;主机名&gt;<br>git remote add命令用于添加远程主机。</p>\n<p>$ git remote add &lt;主机名&gt; &lt;网址&gt;<br>git remote rm命令用于删除远程主机。</p>\n<p>$ git remote rm &lt;主机名&gt;<br>git remote rename命令用于远程主机的改名。</p>\n<p>$ git remote rename &lt;原主机名&gt; &lt;新主机名&gt;<br>三、git fetch<br>一旦远程主机的版本库有了更新（Git术语叫做commit），需要将这些更新取回本地，这时就要用到git fetch命令。</p>\n<p>$ git fetch &lt;远程主机名&gt;<br>上面命令将某个远程主机的更新，全部取回本地。</p>\n<p>git fetch命令通常用来查看其他人的进程，因为它取回的代码对你本地的开发代码没有影响。</p>\n<p>默认情况下，git fetch取回所有分支（branch）的更新。如果只想取回特定分支的更新，可以指定分支名。</p>\n<p>$ git fetch &lt;远程主机名&gt; &lt;分支名&gt;<br>比如，取回origin主机的master分支。</p>\n<p>$ git fetch origin master<br>所取回的更新，在本地主机上要用”远程主机名/分支名”的形式读取。比如origin主机的master，就要用origin/master读取。</p>\n<p>git branch命令的-r选项，可以用来查看远程分支，-a选项查看所有分支。</p>\n<p>$ git branch -r<br>origin/master</p>\n<p>$ git branch -a</p>\n<ul>\n<li>master<br>remotes/origin/master<br>上面命令表示，本地主机的当前分支是master，远程分支是origin/master。</li>\n</ul>\n<p>取回远程主机的更新以后，可以在它的基础上，使用git checkout命令创建一个新的分支。</p>\n<p>$ git checkout -b newBrach origin/master<br>上面命令表示，在origin/master的基础上，创建一个新分支。</p>\n<p>此外，也可以使用git merge命令或者git rebase命令，在本地分支上合并远程分支。</p>\n<p>$ git merge origin/master</p>\n<h1 id=\"或者\"><a href=\"#或者\" class=\"headerlink\" title=\"或者\"></a>或者</h1><p>$ git rebase origin/master<br>上面命令表示在当前分支上，合并origin/master。</p>\n<p>四、git pull<br>git pull命令的作用是，取回远程主机某个分支的更新，再与本地的指定分支合并。它的完整格式稍稍有点复杂。</p>\n<p>$ git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;<br>比如，取回origin主机的next分支，与本地的master分支合并，需要写成下面这样。</p>\n<p>$ git pull origin next:master<br>如果远程分支是与当前分支合并，则冒号后面的部分可以省略。</p>\n<p>$ git pull origin next<br>上面命令表示，取回origin/next分支，再与当前分支合并。实质上，这等同于先做git fetch，再做git merge。</p>\n<p>$ git fetch origin<br>$ git merge origin/next<br>在某些场合，Git会自动在本地分支与远程分支之间，建立一种追踪关系（tracking）。比如，在git clone的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，也就是说，本地的master分支自动”追踪”origin/master分支。</p>\n<p>Git也允许手动建立追踪关系。</p>\n<p>git branch –set-upstream master origin/next<br>上面命令指定master分支追踪origin/next分支。</p>\n<p>如果当前分支与远程分支存在追踪关系，git pull就可以省略远程分支名。</p>\n<p>$ git pull origin<br>上面命令表示，本地的当前分支自动与对应的origin主机”追踪分支”（remote-tracking branch）进行合并。</p>\n<p>如果当前分支只有一个追踪分支，连远程主机名都可以省略。</p>\n<p>$ git pull<br>上面命令表示，当前分支自动与唯一一个追踪分支进行合并。</p>\n<p>如果合并需要采用rebase模式，可以使用–rebase选项。</p>\n<p>$ git pull –rebase &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;<br>如果远程主机删除了某个分支，默认情况下，git pull 不会在拉取远程分支的时候，删除对应的本地分支。这是为了防止，由于其他人操作了远程主机，导致git pull不知不觉删除了本地分支。</p>\n<p>但是，你可以改变这个行为，加上参数 -p 就会在本地删除远程已经删除的分支。</p>\n<p>$ git pull -p</p>\n<h1 id=\"等同于下面的命令\"><a href=\"#等同于下面的命令\" class=\"headerlink\" title=\"等同于下面的命令\"></a>等同于下面的命令</h1><p>$ git fetch –prune origin<br>$ git fetch -p<br>五、git push<br>git push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相仿。</p>\n<p>$ git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;<br>注意，分支推送顺序的写法是&lt;来源地&gt;:&lt;目的地&gt;，所以git pull是&lt;远程分支&gt;:&lt;本地分支&gt;，而git push是&lt;本地分支&gt;:&lt;远程分支&gt;。</p>\n<p>如果省略远程分支名，则表示将本地分支推送与之存在”追踪关系”的远程分支（通常两者同名），如果该远程分支不存在，则会被新建。</p>\n<p>$ git push origin master<br>上面命令表示，将本地的master分支推送到origin主机的master分支。如果后者不存在，则会被新建。</p>\n<p>如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。</p>\n<p>$ git push origin :master</p>\n<h1 id=\"等同于\"><a href=\"#等同于\" class=\"headerlink\" title=\"等同于\"></a>等同于</h1><p>$ git push origin –delete master<br>上面命令表示删除origin主机的master分支。</p>\n<p>如果当前分支与远程分支之间存在追踪关系，则本地分支和远程分支都可以省略。</p>\n<p>$ git push origin<br>上面命令表示，将当前分支推送到origin主机的对应分支。</p>\n<p>如果当前分支只有一个追踪分支，那么主机名都可以省略。</p>\n<p>$ git push<br>如果当前分支与多个主机存在追踪关系，则可以使用-u选项指定一个默认主机，这样后面就可以不加任何参数使用git push。</p>\n<p>$ git push -u origin master<br>上面命令将本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了。</p>\n<p>不带任何参数的git push，默认只推送当前分支，这叫做simple方式。此外，还有一种matching方式，会推送所有有对应的远程分支的本地分支。Git 2.0版本之前，默认采用matching方法，现在改为默认采用simple方式。如果要修改这个设置，可以采用git config命令。</p>\n<p>$ git config –global push.default matching</p>\n<h1 id=\"或者-1\"><a href=\"#或者-1\" class=\"headerlink\" title=\"或者\"></a>或者</h1><p>$ git config –global push.default simple<br>还有一种情况，就是不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用–all选项。</p>\n<p>$ git push –all origin<br>上面命令表示，将所有本地分支都推送到origin主机。</p>\n<p>如果远程主机的版本比本地版本更新，推送时Git会报错，要求先在本地做git pull合并差异，然后再推送到远程主机。这时，如果你一定要推送，可以使用–force选项。</p>\n<p>$ git push –force origin<br>上面命令使用–force选项，结果导致远程主机上更新的版本被覆盖。除非你很确定要这样做，否则应该尽量避免使用–force选项。</p>\n<p>最后，git push不会推送标签（tag），除非使用–tags选项。</p>\n<p>$ git push origin –tags<br>（完）</p>\n<p>文档信息<br>版权声明：自由转载-非商用-非衍生-保持署名（创意共享3.0许可证）<br>发表日期： 2014年6月12日<br>更多内容： 档案 ? 开发者手册<br>文集：《前方的路》，《未来世界的幸存者》</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"from-http-www-ruanyifeng-com-blog-2014-06-git-remote-html\"><a href=\"#from-http-www-ruanyifeng-com-blog-2014-06-git-remote-html\" class=\"headerlink\" title=\"from: http://www.ruanyifeng.com/blog/2014/06/git_remote.html\"></a>from: <a href=\"http://www.ruanyifeng.com/blog/2014/06/git_remote.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2014/06/git_remote.html</a></h2><p>一、git clone<br>远程操作的第一步，通常是从远程主机克隆一个版本库，这时就要用到git clone命令。</p>\n<p>$ git clone &lt;版本库的网址&gt;<br>比如，克隆jQuery的版本库。</p>\n<p>$ git clone <a href=\"https://github.com/jquery/jquery.git\" target=\"_blank\" rel=\"noopener\">https://github.com/jquery/jquery.git</a><br>该命令会在本地主机生成一个目录，与远程主机的版本库同名。如果要指定不同的目录名，可以将目录名作为git clone命令的第二个参数。</p>\n<p>$ git clone &lt;版本库的网址&gt; &lt;本地目录名&gt;<br>git clone支持多种协议，除了HTTP(s)以外，还支持SSH、Git、本地文件协议等，下面是一些例子。</p>\n<p>$ git clone http[s]://example.com/path/to/repo.git/<br>$ git clone ssh://example.com/path/to/repo.git/<br>$ git clone git://example.com/path/to/repo.git/<br>$ git clone /opt/git/project.git<br>$ git clone file:///opt/git/project.git<br>$ git clone ftp[s]://example.com/path/to/repo.git/<br>$ git clone rsync://example.com/path/to/repo.git/<br>SSH协议还有另一种写法。</p>\n<p>$ git clone [user@]example.com:path/to/repo.git/<br>通常来说，Git协议下载速度最快，SSH协议用于需要用户认证的场合。各种协议优劣的详细讨论请参考官方文档。</p>\n<p>二、git remote<br>为了便于管理，Git要求每个远程主机都必须指定一个主机名。git remote命令就用于管理主机名。</p>\n<p>不带选项的时候，git remote命令列出所有远程主机。</p>\n<p>$ git remote<br>origin<br>使用-v选项，可以参看远程主机的网址。</p>\n<p>$ git remote -v<br>origin  <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:jquery/jquery.git (fetch)<br>origin  <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:jquery/jquery.git (push)<br>上面命令表示，当前只有一台远程主机，叫做origin，以及它的网址。</p>\n<p>克隆版本库的时候，所使用的远程主机自动被Git命名为origin。如果想用其他的主机名，需要用git clone命令的-o选项指定。</p>\n<p>$ git clone -o jQuery <a href=\"https://github.com/jquery/jquery.git\" target=\"_blank\" rel=\"noopener\">https://github.com/jquery/jquery.git</a><br>$ git remote<br>jQuery<br>上面命令表示，克隆的时候，指定远程主机叫做jQuery。</p>\n<p>git remote show命令加上主机名，可以查看该主机的详细信息。</p>\n<p>$ git remote show &lt;主机名&gt;<br>git remote add命令用于添加远程主机。</p>\n<p>$ git remote add &lt;主机名&gt; &lt;网址&gt;<br>git remote rm命令用于删除远程主机。</p>\n<p>$ git remote rm &lt;主机名&gt;<br>git remote rename命令用于远程主机的改名。</p>\n<p>$ git remote rename &lt;原主机名&gt; &lt;新主机名&gt;<br>三、git fetch<br>一旦远程主机的版本库有了更新（Git术语叫做commit），需要将这些更新取回本地，这时就要用到git fetch命令。</p>\n<p>$ git fetch &lt;远程主机名&gt;<br>上面命令将某个远程主机的更新，全部取回本地。</p>\n<p>git fetch命令通常用来查看其他人的进程，因为它取回的代码对你本地的开发代码没有影响。</p>\n<p>默认情况下，git fetch取回所有分支（branch）的更新。如果只想取回特定分支的更新，可以指定分支名。</p>\n<p>$ git fetch &lt;远程主机名&gt; &lt;分支名&gt;<br>比如，取回origin主机的master分支。</p>\n<p>$ git fetch origin master<br>所取回的更新，在本地主机上要用”远程主机名/分支名”的形式读取。比如origin主机的master，就要用origin/master读取。</p>\n<p>git branch命令的-r选项，可以用来查看远程分支，-a选项查看所有分支。</p>\n<p>$ git branch -r<br>origin/master</p>\n<p>$ git branch -a</p>\n<ul>\n<li>master<br>remotes/origin/master<br>上面命令表示，本地主机的当前分支是master，远程分支是origin/master。</li>\n</ul>\n<p>取回远程主机的更新以后，可以在它的基础上，使用git checkout命令创建一个新的分支。</p>\n<p>$ git checkout -b newBrach origin/master<br>上面命令表示，在origin/master的基础上，创建一个新分支。</p>\n<p>此外，也可以使用git merge命令或者git rebase命令，在本地分支上合并远程分支。</p>\n<p>$ git merge origin/master</p>\n<h1 id=\"或者\"><a href=\"#或者\" class=\"headerlink\" title=\"或者\"></a>或者</h1><p>$ git rebase origin/master<br>上面命令表示在当前分支上，合并origin/master。</p>\n<p>四、git pull<br>git pull命令的作用是，取回远程主机某个分支的更新，再与本地的指定分支合并。它的完整格式稍稍有点复杂。</p>\n<p>$ git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;<br>比如，取回origin主机的next分支，与本地的master分支合并，需要写成下面这样。</p>\n<p>$ git pull origin next:master<br>如果远程分支是与当前分支合并，则冒号后面的部分可以省略。</p>\n<p>$ git pull origin next<br>上面命令表示，取回origin/next分支，再与当前分支合并。实质上，这等同于先做git fetch，再做git merge。</p>\n<p>$ git fetch origin<br>$ git merge origin/next<br>在某些场合，Git会自动在本地分支与远程分支之间，建立一种追踪关系（tracking）。比如，在git clone的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，也就是说，本地的master分支自动”追踪”origin/master分支。</p>\n<p>Git也允许手动建立追踪关系。</p>\n<p>git branch –set-upstream master origin/next<br>上面命令指定master分支追踪origin/next分支。</p>\n<p>如果当前分支与远程分支存在追踪关系，git pull就可以省略远程分支名。</p>\n<p>$ git pull origin<br>上面命令表示，本地的当前分支自动与对应的origin主机”追踪分支”（remote-tracking branch）进行合并。</p>\n<p>如果当前分支只有一个追踪分支，连远程主机名都可以省略。</p>\n<p>$ git pull<br>上面命令表示，当前分支自动与唯一一个追踪分支进行合并。</p>\n<p>如果合并需要采用rebase模式，可以使用–rebase选项。</p>\n<p>$ git pull –rebase &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;<br>如果远程主机删除了某个分支，默认情况下，git pull 不会在拉取远程分支的时候，删除对应的本地分支。这是为了防止，由于其他人操作了远程主机，导致git pull不知不觉删除了本地分支。</p>\n<p>但是，你可以改变这个行为，加上参数 -p 就会在本地删除远程已经删除的分支。</p>\n<p>$ git pull -p</p>\n<h1 id=\"等同于下面的命令\"><a href=\"#等同于下面的命令\" class=\"headerlink\" title=\"等同于下面的命令\"></a>等同于下面的命令</h1><p>$ git fetch –prune origin<br>$ git fetch -p<br>五、git push<br>git push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相仿。</p>\n<p>$ git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;<br>注意，分支推送顺序的写法是&lt;来源地&gt;:&lt;目的地&gt;，所以git pull是&lt;远程分支&gt;:&lt;本地分支&gt;，而git push是&lt;本地分支&gt;:&lt;远程分支&gt;。</p>\n<p>如果省略远程分支名，则表示将本地分支推送与之存在”追踪关系”的远程分支（通常两者同名），如果该远程分支不存在，则会被新建。</p>\n<p>$ git push origin master<br>上面命令表示，将本地的master分支推送到origin主机的master分支。如果后者不存在，则会被新建。</p>\n<p>如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。</p>\n<p>$ git push origin :master</p>\n<h1 id=\"等同于\"><a href=\"#等同于\" class=\"headerlink\" title=\"等同于\"></a>等同于</h1><p>$ git push origin –delete master<br>上面命令表示删除origin主机的master分支。</p>\n<p>如果当前分支与远程分支之间存在追踪关系，则本地分支和远程分支都可以省略。</p>\n<p>$ git push origin<br>上面命令表示，将当前分支推送到origin主机的对应分支。</p>\n<p>如果当前分支只有一个追踪分支，那么主机名都可以省略。</p>\n<p>$ git push<br>如果当前分支与多个主机存在追踪关系，则可以使用-u选项指定一个默认主机，这样后面就可以不加任何参数使用git push。</p>\n<p>$ git push -u origin master<br>上面命令将本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了。</p>\n<p>不带任何参数的git push，默认只推送当前分支，这叫做simple方式。此外，还有一种matching方式，会推送所有有对应的远程分支的本地分支。Git 2.0版本之前，默认采用matching方法，现在改为默认采用simple方式。如果要修改这个设置，可以采用git config命令。</p>\n<p>$ git config –global push.default matching</p>\n<h1 id=\"或者-1\"><a href=\"#或者-1\" class=\"headerlink\" title=\"或者\"></a>或者</h1><p>$ git config –global push.default simple<br>还有一种情况，就是不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用–all选项。</p>\n<p>$ git push –all origin<br>上面命令表示，将所有本地分支都推送到origin主机。</p>\n<p>如果远程主机的版本比本地版本更新，推送时Git会报错，要求先在本地做git pull合并差异，然后再推送到远程主机。这时，如果你一定要推送，可以使用–force选项。</p>\n<p>$ git push –force origin<br>上面命令使用–force选项，结果导致远程主机上更新的版本被覆盖。除非你很确定要这样做，否则应该尽量避免使用–force选项。</p>\n<p>最后，git push不会推送标签（tag），除非使用–tags选项。</p>\n<p>$ git push origin –tags<br>（完）</p>\n<p>文档信息<br>版权声明：自由转载-非商用-非衍生-保持署名（创意共享3.0许可证）<br>发表日期： 2014年6月12日<br>更多内容： 档案 ? 开发者手册<br>文集：《前方的路》，《未来世界的幸存者》</p>\n"},{"title":"test","date":"2018-05-19T14:51:35.000Z","_content":"test\n","source":"_posts/test.md","raw":"---\ntitle: test\ndate: 2018-05-19 22:51:35\ntags:\n---\ntest\n","slug":"test","published":1,"updated":"2018-05-20T02:23:51.446Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhe7p4ry00036slt3t9khgh1","content":"<p>test</p>\n","site":{"data":{}},"excerpt":"","more":"<p>test</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjhe7p4rs00026slt8x7qsl18","tag_id":"cjhe83xif00000oltubmcq7qp","_id":"cjhe83xiq00010oltvkrocaci"}],"Tag":[{"name":"ת��","_id":"cjhe7zpv400004sltbd90u82c"},{"name":"转载","_id":"cjhe83xif00000oltubmcq7qp"}]}}